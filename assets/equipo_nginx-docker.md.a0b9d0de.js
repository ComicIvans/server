import{_ as e,c as a,o as s,a as o}from"./app.f397a7aa.js";const y='{"title":"Nginx","description":"","frontmatter":{},"headers":[{"level":2,"title":"TL;DR","slug":"tl-dr"},{"level":2,"title":"Instalaci\xF3n","slug":"instalacion"},{"level":2,"title":"Docker Compose","slug":"docker-compose"},{"level":2,"title":"Usuario para Docker","slug":"usuario-para-docker"},{"level":2,"title":"Archivos para Docker","slug":"archivos-para-docker"},{"level":2,"title":"El docker-compose.yml","slug":"el-docker-compose-yml"}],"relativePath":"equipo/nginx-docker.md","lastUpdated":1654728411000}',n={name:"equipo/nginx-docker.md"},r=o(`<h1 id="nginx" tabindex="-1">Nginx <a class="header-anchor" href="#nginx" aria-hidden="true">#</a></h1><p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ratione voluptates veritatis cumque mollitia commodi ullam atque rerum doloremque reiciendis obcaecati, excepturi dolorum illum facere possimus quisquam veniam voluptatum et beatae enim consectetur vero dolore tenetur inventore amet. Aspernatur, nulla tempora adipisci est modi ipsam laudantium. Blanditiis quidem iusto voluptate minima temporibus aperiam excepturi placeat. Quae aliquid molestiae quia autem dolore explicabo impedit necessitatibus fugit commodi placeat aspernatur suscipit atque dolorum itaque ab enim deleniti, libero asperiores tempora voluptatem hic! Consequuntur ullam quam a aliquid delectus tenetur sit earum enim, fugit ut. Laboriosam perferendis iste dolore delectus quisquam dolores quod magni!</p><h1 id="docker" tabindex="-1">Docker <a class="header-anchor" href="#docker" aria-hidden="true">#</a></h1><p>Para gestionar y ejecutar todos los servicios web, utilizaremos el maravilloso Docker. Este hermoso software te permite (a trav\xE9s de un plugin llamado Docker Compose) ejecutar una serie de mini-vm desde la terminal en base a un archivo de configuraci\xF3n llamado <code>docker-compose.yml</code>.</p><p>Aqu\xED hay una gu\xEDa de c\xF3mo instalar y configurar todo, pero si te quedas con dudas o quieres ver algo m\xE1s a fondo, puedes visitar la <a href="https://docs.docker.com/" target="_blank" rel="noopener noreferrer">documentaci\xF3n oficial de Docker</a>.</p><p><strong>Cositas generales</strong>: para seguir esta instalaci\xF3n tienes que ya haber <a href="./sistema-encriptado-ssh.html">configurado lo b\xE1sico del sistema operativo</a> (<code>apt</code> en realidad) y tener una terminal abierta. A parte, cualquier comando de <code>apt</code> se puede sustituir por su correspondiente <code>apt-get</code> (o <code>apt-cache</code>, pero que no vamos a usar realmente).</p><h2 id="tl-dr" tabindex="-1">TL;DR <a class="header-anchor" href="#tl-dr" aria-hidden="true">#</a></h2><p>Si vas con prisa o te da pereza leer, aunque no lo recomiendo para nada, copia y pega lo siguiente en tu terminal, dale a intro y que se haga la magia:</p><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">$ sudo apt remove docker docker-engine docker.io containerd runc</span></span>
<span class="line"><span style="color:#A6ACCD;">$ sudo mkdir -p /etc/apt/keyrings</span></span>
<span class="line"><span style="color:#A6ACCD;">$ curl -fsSL https://download.docker.com/linux/debian/gpg </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg</span></span>
<span class="line"><span style="color:#A6ACCD;">$ </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">deb [arch=</span><span style="color:#89DDFF;">$(</span><span style="color:#C3E88D;">dpkg --print-architecture</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;"> signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian </span><span style="color:#A6ACCD;">\\</span></span>
<span class="line"><span style="color:#C3E88D;">  </span><span style="color:#89DDFF;">$(</span><span style="color:#C3E88D;">lsb_release -cs</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;"> stable</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sudo tee /etc/apt/sources.list.d/docker.list </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> /dev/null</span></span>
<span class="line"><span style="color:#A6ACCD;">$ sudo apt update</span></span>
<span class="line"><span style="color:#A6ACCD;">$ sudo apt install docker-ce docker-ce-cli containerd.io docker-compose-plugin</span></span>
<span class="line"></span></code></pre></div><h2 id="instalacion" tabindex="-1">Instalaci\xF3n <a class="header-anchor" href="#instalacion" aria-hidden="true">#</a></h2><p>Gracias a estar en en inmejorable Debian, usaremos el magn\xEDfico comando <code>apt</code>. Nuestros queridos amigos de docker hace un tiempo cambiaron de los repositorios oficiales de apt a unos propios, y por tanto, <strong>si ya tienes alguna versi\xF3n de docker instalada</strong> (llamadas <code>docker</code>, <code>docker.io</code> o <code>docker-engine</code>) toca eliminar los antiguos paquetes ejecutando lo siguiente:</p><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">$ sudo apt remove docker docker-engine docker.io containerd runc</span></span>
<span class="line"></span></code></pre></div><p>Antes de empezar con la instalaci\xF3n de Docker, hay unos peque\xF1os requerimientos que instalar de apt: <code>ca-certificates</code>, <code>curl</code>, <code>gnupg</code>, <code>lsb-release</code>. As\xED que <strong>aseg\xFArate de tener esto instalado para seguir</strong>.</p><p>Ahora que tenemos esto instalado, vamos a descargar la clave GPG oficial de Docker y configurar el repositorio de APT. Ejecuta los siguientes comandos:</p><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">$ sudo mkdir -p /etc/apt/keyrings</span></span>
<span class="line"><span style="color:#A6ACCD;">$ curl -fsSL https://download.docker.com/linux/debian/gpg </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg</span></span>
<span class="line"><span style="color:#A6ACCD;">$ </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">deb [arch=</span><span style="color:#89DDFF;">$(</span><span style="color:#C3E88D;">dpkg --print-architecture</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;"> signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian </span><span style="color:#A6ACCD;">\\</span></span>
<span class="line"><span style="color:#C3E88D;">  </span><span style="color:#89DDFF;">$(</span><span style="color:#C3E88D;">lsb_release -cs</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;"> stable</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> sudo tee /etc/apt/sources.list.d/docker.list </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> /dev/null</span></span>
<span class="line"></span></code></pre></div><p>Y ahora sin m\xE1s dilaci\xF3n instalemos docker:</p><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">$ sudo apt update</span></span>
<span class="line"><span style="color:#A6ACCD;">$ sudo apt install docker-ce docker-ce-cli containerd.io</span></span>
<span class="line"></span></code></pre></div><p>Todo deber\xEDa de estar bien, pero si eres muy tiquismiqui puedes probar a ejecutar <code>sudo docker run hello-world</code> o mirar la documentaci\xF3n si algo va mal. No deber\xEDa de haber ning\xFAn problema con la compatibilidad de versiones, por lo menos por ahora, pero si llegase a haberlo pues \xAA.</p><h2 id="docker-compose" tabindex="-1">Docker Compose <a class="header-anchor" href="#docker-compose" aria-hidden="true">#</a></h2><p>\xA1Sigamos instalando! La maravilla que Docker Compose es vamos a instalarla como un plugin del Docker que ya hemos instalado. Venga que esta es facilita, ejecuta esto y listo:</p><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">$ sudo apt install docker-compose-plugin</span></span>
<span class="line"></span></code></pre></div><p>De nuevo, si no conf\xEDas lo suficiente en <code>apt</code>, comprueba que todo est\xE1 bien ejecutando <code>docker compose version</code>.</p><h2 id="usuario-para-docker" tabindex="-1">Usuario para Docker <a class="header-anchor" href="#usuario-para-docker" aria-hidden="true">#</a></h2><p>Para ejecutar el inmejorable Docker vamos a crear un diferente usuario para ejecutar Docker, as\xED mejoramos ligeramente la seguridad. Para que un usuario pueda ejecutar Docker sin tener que hacer <code>sudo</code> y ejecutarlo como <em>root</em>, hay que a\xF1adirlo al grupo <em>docker</em>. Desde t\xFA usuario de administraci\xF3n con <code>sudo</code> a\xFAn instalado, vamos a ello entonces:</p><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">$ sudo adduser -m docker </span><span style="color:#676E95;font-style:italic;"># Creaci\xF3n del usuario y su home en /home/docker</span></span>
<span class="line"><span style="color:#A6ACCD;">$ sudo groupadd docker </span><span style="color:#676E95;font-style:italic;"># Creaci\xF3n del grupo docker</span></span>
<span class="line"><span style="color:#A6ACCD;">$ sudo usermod -aG docker docker </span><span style="color:#676E95;font-style:italic;"># A\xF1adir el usuario al grupo (s\xED, se llaman igual, t\xFA conf\xEDa)</span></span>
<span class="line"></span></code></pre></div><h2 id="archivos-para-docker" tabindex="-1">Archivos para Docker <a class="header-anchor" href="#archivos-para-docker" aria-hidden="true">#</a></h2><p>Antes de cambiar al usuario <code>docker</code>, a\xFAn con el usuario de administrador copiaremos todos los contenidos de <em>&lt;repo_root&gt;/home/docker</em> a la carpeta de <em>/home/docker</em> en nuestro sistema (<strong>importante hacerlo como el usuario administrador, con el usuario <code>docker</code> no nos dejar\xE1</strong>). Aqu\xED est\xE1n los archivos de configuraci\xF3n de todos los servicios y el famoso <code>docker-compose.yml</code>. As\xED que, <strong>encontr\xE1ndonos en la carpeta del clon del repositorio del server</strong>, ejecutamos:</p><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">$ sudo cp ./home/docker/ /home/docker/</span></span>
<span class="line"></span></code></pre></div><h2 id="el-docker-compose-yml" tabindex="-1">El <code>docker-compose.yml</code> <a class="header-anchor" href="#el-docker-compose-yml" aria-hidden="true">#</a></h2><p>Por fin llegamos al famoso archivo. Este archivo incluye toda la configuraci\xF3n de los servicios a ejecutar con Docker y nos permite c\xF3modamente iniciar todos. En la p\xE1gina de cada servicio se puede encontrar un extracto del contenido del <code>docker-compose.yml</code> para ese servicio concreto. Veamos la estructura de este archivo:</p><ul><li><strong>Volumes</strong></li></ul>`,31),c=[r];function l(i,p,t,d,u,m){return s(),a("div",null,c)}var h=e(n,[["render",l]]);export{y as __pageData,h as default};
